Much powerful and daily use in goLang
Under the hood arrays
package main

import (
	"fmt"
	"sort"
)

func main() {
	fmt.Println("Welcome to the video on Slices")

	// Automatically expands the value
	var fruitList = []string{"Apple", "Peach", "Kiwi"}
	fmt.Printf("Type of fruitList is %T\n", fruitList)

	fruitList = append(fruitList, "Mango", "Banana")
	fmt.Println("Fruit List is : ", fruitList)

	fruitList = append(fruitList[1:4]) // Last is not inclusive
	fmt.Println("Fruit List is : ", fruitList)

	highScores := make([]int, 4) // array with layer of abstraction - slices
	highScores[0] = 12
	highScores[1] = 3
	highScores[2] = 14
	highScores[3] = 5

	// Will give error on below
	// highScores[4] = 45

	// But will not give error on below
	highScores = append(highScores, 3, 12, 10)

	fmt.Println(highScores)

	// Sorting
	sort.Ints(highScores)
	fmt.Println(highScores)

	// ----- How to remove a value from slices based on index. -----
	var courses = []string{"reactjs", "javascript", "swift", "python", "ruby"}
	fmt.Println(courses)

	var index int = 2
	courses = append(courses[:index], courses[index+1:]...)
	fmt.Println(courses)

}

