Why pointers exist
1. Problem - declare a variable, constant or anything are referecne of the memory
When passed to function then we pass the copy instead of the variable and create irregularities.
Pointers gives the assurity - passing memeory address - passing actual variable. 
To absolute assurance we need to make sure that we pass the actual value and not the copy we use the pointers.
Direct reference to the memory address.

package main

import "fmt"

func main() {
	fmt.Println("Welcome to class on pointers")

	// * - is a pointer symbol
	var ptr1 *int

	fmt.Println("Value of pointer is ", ptr1)

	// refernce means &
	myNumber := 23
	var ptr2 = &myNumber
	fmt.Println("Value of the pointer referecning ", ptr2)
	fmt.Println("Value of the pointer referecning ", *ptr2) // I want to see whats inside the pointer

	// *ptr - actual value;

	// The operations are perfromed on the actual value not the value
	*ptr2 = *ptr2 * 2
	fmt.Println("New Number is ", myNumber)

}

